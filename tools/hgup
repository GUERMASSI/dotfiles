#!/usr/bin/env python
import sys
import os
import ConfigParser

from subprocess import Popen, PIPE

if len(sys.argv) != 2:
    print "Usage : hgup 'message'"
    sys.exit()
message = sys.argv[1]

process = Popen(['hg', 'review', '--id'], stdout=PIPE)
review_id, errors = process.communicate()
review_id = review_id.split('\n')[0]

process = Popen(['hg', 'root'], stdout=PIPE)
root_path, errors = process.communicate()
root_path = root_path.split('\n')[0]
root_config = os.path.join(root_path, '.hg', 'hgrc')

config = ConfigParser.RawConfigParser()
config.read(root_config)
server_name = config.get('review', 'server')

if not server_name:
    print "No 'review' section found in .hg/hgrc"
    sys.exit()

command = ['/home/giovanni/bin/upload.py', '-s', server_name,
    '--oauth2', '-r', 'Romain,Fred,jeremy,Fabrice', '--send_mail',
    '--assume_yes', '-m', message]

if not review_id:
    process = Popen(command, stdout=PIPE)
    process_data, errors = process.communicate()
    if errors:
        print errors
        print '\n\nCommand :\n    %s' % ' '.join(command)
        sys.exit()
    print process_data
    for line in process_data.split('\n'):
        if not line.startswith('Issue created'):
            continue
        review_id = line.split('/')[-1]
        Popen('echo ' + review_id + ' > ' + os.path.join(root_path, '.hg',
                    'review_id'), shell=True).communicate()
else:
    Popen(command + ['-i', review_id]).communicate()
