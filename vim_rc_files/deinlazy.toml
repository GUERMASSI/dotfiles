[[plugins]]
repo = 'Shougo/tabpagebuffer.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neopairs.vim'
on_i = 1

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_i = 1
hook_add = 'let g:echodoc_enable_at_startup = 1'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_source = '''
    execute 'source ' . expand($VIM_FOLDER) . '/rc/plugins/unite.rc.vim'
'''
hook_add = '''
    nnoremap [unite] <Nop>
    nmap <space> [unite]

    " Quick sources
    nnoremap <silent> [unite]a :<C-u>Unite -buffer-name=sources source<CR>
    " Quick bookmarks
    nnoremap <silent> [unite]b :<C-u>Unite -buffer-name=bookmarks bookmark<CR>
    " Quick mark search
    nnoremap <silent> [unite]e :<C-u>Unite -buffer-name=marks mark<CR>
    " Quick file search
    nnoremap <silent> [unite]f :<C-u>Unite -buffer-name=files -multi-line
        \ -unique -silent file_rec buffer_tab:- file/new<CR>
    " Quick grep
    nnoremap <silent> [unite]g :<C-u>Unite grep -buffer-name=grep`tabpagenr()`
        \ -no-split -no-empty -no-start-insert -resume -quit<CR>
    " Quick grep (no resume)
    nnoremap <silent> [unite]d :<C-u>Unite grep -buffer-name=grep`tabpagenr()`
        \ -no-split -no-empty -no-start-insert -quit<CR>
    " Quick help
    nnoremap <silent> [unite]h :<C-u>Unite -buffer-name=help help<CR>
    " Quick buffer
    nnoremap <silent> [unite]i :<C-u>Unite -buffer-name=buffer buffer<CR>
    " Previous changes navigation
    nnoremap <silent> [unite]k :<C-u>Unite change jump<CR>
    " Location List
    nnoremap <silent> [unite]l :<C-u>Unite -auto-highlight -wrap
        \ -buffer-name=location_list location_list<CR>
    " Next
    nnoremap <silent> [unite]n :UniteNext<CR>
    " Quick outline
    nnoremap <silent> [unite]o :<C-u>Unite outline -start-insert -resume<CR>
    " Previous
    nnoremap <silent> [unite]p :UnitePrevious<CR>
    " Quickfix window
    nnoremap <silent> [unite]q :<C-u>Unite -auto-highlight -wrap -no-quit
        \ -buffer-name=quickfix quickfix<CR>
    " Quick registers
    nnoremap <silent> [unite]r :<C-u>Unite -buffer-name=register
        \ -default-action=append register history/yank<CR>
    " Quick sessions
    nnoremap <silent> [unite]s :<C-u>Unite -buffer-name=sessions session<CR>
    " Quick tags
    nnoremap <silent> [unite]t :<C-u>UniteWithCursorWord
        \ -buffer-name=tag tag<CR>
    " Quick window switch
    nnoremap <silent> [unite]w :<C-u>Unite window<CR>
    " Quick yank history
    nnoremap <silent> [unite]y :<C-u>Unite -buffer-name=yanks history/yank<CR>
    " Quick mercurial status
    nnoremap <silent> [unite]z :<C-u>Unite -buffer-name=status hg/status<CR>
    " General Fuzzy search
    nnoremap <silent> [unite]<Space>
        \ :<C-u>Unite -buffer-name=files -multi-line -unique -silent
        \ jump_point file_point buffer_tab:- file_mru
        \ file_rec/git file file_rec/async<CR>
    " Quick commands
    nnoremap <silent> [unite]; :<C-u>Unite -buffer-name=history
        \ history/command<CR>

    " Jumps
    nnoremap <silent> <C-k>
        \ :<C-u>Unite change jump<CR>

    " <C-t>: Tab pages
    nnoremap <silent><expr> <C-t>
        \ :<C-u>Unite -auto-resize -select=`(tabpagenr()-1)` tab<CR>"

    " Execute help.
    nnoremap <silent> <C-h> :<C-u>Unite -buffer-name=help help<CR>

    " Execute help by cursor keyword.
    nnoremap <silent> g<C-h> :<C-u>UniteWithCursorWord help<CR>

    " Search.
    nnoremap <silent> /
        \ :<C-u>Unite -buffer-name=search%`bufnr('%')`
        \ -auto-highlight -start-insert line:forward:wrap<CR>
    nnoremap <silent> ?
        \ :<C-u>Unite -buffer-name=search%`bufnr('%')`
        \ -auto-highlight -start-insert line:backward<CR>
    nnoremap <silent> *
        \ :<C-u>UniteWithCursorWord -buffer-name=search%`bufnr('%')`
        \ -auto-highlight line:forward:wrap<CR>
    nnoremap [unite]/ /
    nnoremap [unite]? ?
    cnoremap <expr><silent><C-g>
        \ (getcmdtype() == '/') ?
        \ "\<ESC>:Unite -buffer-name=search line:forward:wrap -input="
        \ . getcmdline() . "\<CR>" : "\<C-g>"

    nnoremap <silent><expr> n
        \ " :\<C-u>UniteResume search%" . bufnr('%') . " -no-start-insert\<CR>"
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_map = [['n', '<Plug>']]
on_path = '.*'
hook_add = '''
    nnoremap <silent>   <leader>v   :<C-u>VimFiler -find<CR>
    nnoremap <leader>ff :<C-u>VimFilerExplorer<CR>
'''
hook_source = 'source ~/.vim/rc/plugins/vimfiler.rc.vim'

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [Window]e :<C-u>Unite junkfile/new junkfile -start-insert<CR>
'''

[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'
hook_add = '''
    let g:unite_source_outline_indent_width = 4
'''

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'
on_i = 1

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neco-syntax'
on_i = 1

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = [['x', '<Plug>']]
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'tsukkee/unite-tag'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/neco-look'
on_i = 1

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = [['n', '<Plug>']]

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = [['n', '<Plug>']]
hook_add = '''
    nmap <silent>j <Plug>(accelerated_jk_gj)
    nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = [['nx', '<Plug>']]
hook_add = 'xmap p <Plug>(operator-replace)'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = [['n', '<Plug>']]
hook_add = '''
    nmap <silent>sa <Plug>(operator-surround-append)a
    nmap <silent>sd <Plug>(operator-surround-delete)a
    nmap <silent>sr <Plug>(operator-surround-replace)a
    nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'chikatoike/concealedyank.vim'
on_map = [['x', '<Plug>(operator-concealedyank)']]

[[plugins]]
repo = 'kannokanno/previm'
# on_ft = ['markdown', 'rst', 'mkd']
on_cmd = 'PrevimOpen'
depends = 'open-browser.vim'

# Nim syntax
[[plugins]]
on_ft = 'nim'
repo = 'zah/nimrod.vim'
hook_add = '''
    function! JumpToDef()
        if exists("*GotoDefinition_" . &filetype)
            call GotoDefinition_{&filetype}()
        else
            execute "norm! \<C-]>"
        endif
    endf

    " Jump to tag
    nnoremap <M-g> :call JumpToDef()<cr>
    inoremap <M-g> <esc>:call JumpToDef()<cr>i
'''

# Tryton
[[plugins]]
on_ft = ['python', 'py', 'xml']
repo = 'JCavallo/tryton-vim'
on_source = 'unite.vim'
hook_add = '''
    let g:tryton_default_mappings = 1
    let g:tryton_trytond_path = "$VIRTUAL_ENV/tryton-workspace/trytond"
    let g:tryton_server_host_name = 'localhost'
    let g:tryton_server_port = '8080'
    let g:tryton_server_login = 'admin'
    nmap <leader>com 0yf df oreview http://rietveld.coopengo.com/jkp$xXOjkgg0fFf:lyFFf:lldFFjojkkpxXXX
'''

[[plugins]]
repo = 'Konfekt/FastFold'
on_i = 1
hook_post_source = 'FastFoldUpdate'

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = [['n', '<Plug>']]
hook_add = '''
    nmap w <Plug>(easymotion-lineforward)
    nnoremap W     w
    nmap b <Plug>(easymotion-linebackward)
    nnoremap B     b
    nmap [Alt]j <Plug>(easymotion-j)
    nmap [Alt]k <Plug>(easymotion-k)
    nmap ' <Plug>(easymotion-prefix)

    let g:EasyMotion_startofline = 0
    let g:EasyMotion_show_prompt = 0
    let g:EasyMotion_verbose = 0
'''

[[plugins]]
repo = 'kana/vim-smartchr'
on_i = 1
hook_source = '''
    execute 'source ' . expand($VIM_FOLDER) . '/rc/plugins/smartchr.rc.vim'
'''

[[plugins]]
repo = 'davidhalter/jedi-vim'
if = "!has('nvim')"
on_ft = 'python'
hook_source = '''
  let g:jedi#completions_enabled = 0
  let g:jedi#auto_vim_configuration = 0
  let g:jedi#smart_auto_mappings = 0
  let g:jedi#show_call_signatures = 0
'''
